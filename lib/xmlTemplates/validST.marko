<!-- Successful Service Ticket Validation 2.0/3.0 -->
<cas:serviceResponse xmlns:cas="http://www.yale.edu/tp/cas">
 <cas:authenticationSuccess>
  <cas:user>${data.username}</cas:user>
  <!--<cas:proxyGrantingTicket>PGTIOU-84678-8a9d...</cas:proxyGrantingTicket>-->

  <cas:attributes if(data.attributes)>
    <if(data.attributes.standardAttributes)>
      <!--
         These attributes are all of the attributes other than the 'any' type
         as defined in the schema. `standardAttributes` should be an object
         with key names matching the element names in the schema.
      -->
      <var attrs="${data.attributes.standardAttributes}">
        <cas:authenticationDate if(attrs.authenticationDate)>${attrs.authenticationDate}</cas:authenticationDate>
        <cas:longTermAuthenticationRequestTokenUsed if(attrs.longTermAuthenticationRequestTokenUsed)>
          ${attrs.longTermAuthenticationRequestTokenUsed}
        </cas:longTermAuthenticationRequestTokenUsed>
        <cas:isFromNewLogin if(attrs.isFromNewLogin)>${attrs.isFromNewLogin}</cas:isFromNewLogin>
        <if(attrs.memberOf)>
          <cas:memberOf for(group in attrs.memberOf)>${group}</cas:memberOf>
        </if>
      </var>
    </if>

    <if(data.extraAttributes)>
      <!--
        These attributes are the 'any' attribute as allowed by the schema.
        It should be an object of names and values. e.g.:
          {
            firstName: 'James',
            lastName: 'Sumners'
          }

        Which will result in:
          <cas:firstName>James</cas:firstName>
          <cas:lastName>Sumners</cas:lastName>
       -->
       <for(name,value in data.extraAttributes)>
        <if(name === 'memberOf')>
          <cas:memberOf for(group in value)>${group}</cas:memberOf>
        </if>
        <else>
          <cas:${name}>${value}</cas:${name}>
        </else>
       </for>
    </if>
  </cas:attributes>
 </cas:authenticationSuccess>
</cas:serviceResponse>
